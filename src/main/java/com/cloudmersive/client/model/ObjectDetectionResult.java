/**
 * imageapi
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cloudmersive.client.model;

import com.cloudmersive.client.model.DetectedObject;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Result of detecting objects in an image
 **/
@ApiModel(description = "Result of detecting objects in an image")
public class ObjectDetectionResult {
  
  @SerializedName("Successful")
  private Boolean successful = null;
  @SerializedName("Objects")
  private List<DetectedObject> objects = null;
  @SerializedName("ObjectCount")
  private Integer objectCount = null;

  /**
   * Was the image processed successfully?
   **/
  @ApiModelProperty(value = "Was the image processed successfully?")
  public Boolean getSuccessful() {
    return successful;
  }
  public void setSuccessful(Boolean successful) {
    this.successful = successful;
  }

  /**
   * Array of objects detected in the scene
   **/
  @ApiModelProperty(value = "Array of objects detected in the scene")
  public List<DetectedObject> getObjects() {
    return objects;
  }
  public void setObjects(List<DetectedObject> objects) {
    this.objects = objects;
  }

  /**
   * Number of objects detected in the scene
   **/
  @ApiModelProperty(value = "Number of objects detected in the scene")
  public Integer getObjectCount() {
    return objectCount;
  }
  public void setObjectCount(Integer objectCount) {
    this.objectCount = objectCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectDetectionResult objectDetectionResult = (ObjectDetectionResult) o;
    return (this.successful == null ? objectDetectionResult.successful == null : this.successful.equals(objectDetectionResult.successful)) &&
        (this.objects == null ? objectDetectionResult.objects == null : this.objects.equals(objectDetectionResult.objects)) &&
        (this.objectCount == null ? objectDetectionResult.objectCount == null : this.objectCount.equals(objectDetectionResult.objectCount));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.successful == null ? 0: this.successful.hashCode());
    result = 31 * result + (this.objects == null ? 0: this.objects.hashCode());
    result = 31 * result + (this.objectCount == null ? 0: this.objectCount.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectDetectionResult {\n");
    
    sb.append("  successful: ").append(successful).append("\n");
    sb.append("  objects: ").append(objects).append("\n");
    sb.append("  objectCount: ").append(objectCount).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
