/**
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cloudmersive.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Geolocation result
 **/
@ApiModel(description = "Geolocation result")
public class GeolocateResponse {
  
  @SerializedName("CountryCode")
  private String countryCode = null;
  @SerializedName("CountryName")
  private String countryName = null;
  @SerializedName("City")
  private String city = null;
  @SerializedName("RegionCode")
  private String regionCode = null;
  @SerializedName("RegionName")
  private String regionName = null;
  @SerializedName("ZipCode")
  private String zipCode = null;
  @SerializedName("TimezoneStandardName")
  private String timezoneStandardName = null;
  @SerializedName("Latitude")
  private Double latitude = null;
  @SerializedName("Longitude")
  private Double longitude = null;

  /**
   * Two-letter country code of IP address
   **/
  @ApiModelProperty(value = "Two-letter country code of IP address")
  public String getCountryCode() {
    return countryCode;
  }
  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  /**
   * Country name of IP address
   **/
  @ApiModelProperty(value = "Country name of IP address")
  public String getCountryName() {
    return countryName;
  }
  public void setCountryName(String countryName) {
    this.countryName = countryName;
  }

  /**
   * City of IP address
   **/
  @ApiModelProperty(value = "City of IP address")
  public String getCity() {
    return city;
  }
  public void setCity(String city) {
    this.city = city;
  }

  /**
   * State/region code of IP address
   **/
  @ApiModelProperty(value = "State/region code of IP address")
  public String getRegionCode() {
    return regionCode;
  }
  public void setRegionCode(String regionCode) {
    this.regionCode = regionCode;
  }

  /**
   * State/region of IP address
   **/
  @ApiModelProperty(value = "State/region of IP address")
  public String getRegionName() {
    return regionName;
  }
  public void setRegionName(String regionName) {
    this.regionName = regionName;
  }

  /**
   * Zip or postal code of IP address
   **/
  @ApiModelProperty(value = "Zip or postal code of IP address")
  public String getZipCode() {
    return zipCode;
  }
  public void setZipCode(String zipCode) {
    this.zipCode = zipCode;
  }

  /**
   * Timezone of IP address
   **/
  @ApiModelProperty(value = "Timezone of IP address")
  public String getTimezoneStandardName() {
    return timezoneStandardName;
  }
  public void setTimezoneStandardName(String timezoneStandardName) {
    this.timezoneStandardName = timezoneStandardName;
  }

  /**
   * Latitude of IP address
   **/
  @ApiModelProperty(value = "Latitude of IP address")
  public Double getLatitude() {
    return latitude;
  }
  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }

  /**
   * Longitude of IP address
   **/
  @ApiModelProperty(value = "Longitude of IP address")
  public Double getLongitude() {
    return longitude;
  }
  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeolocateResponse geolocateResponse = (GeolocateResponse) o;
    return (this.countryCode == null ? geolocateResponse.countryCode == null : this.countryCode.equals(geolocateResponse.countryCode)) &&
        (this.countryName == null ? geolocateResponse.countryName == null : this.countryName.equals(geolocateResponse.countryName)) &&
        (this.city == null ? geolocateResponse.city == null : this.city.equals(geolocateResponse.city)) &&
        (this.regionCode == null ? geolocateResponse.regionCode == null : this.regionCode.equals(geolocateResponse.regionCode)) &&
        (this.regionName == null ? geolocateResponse.regionName == null : this.regionName.equals(geolocateResponse.regionName)) &&
        (this.zipCode == null ? geolocateResponse.zipCode == null : this.zipCode.equals(geolocateResponse.zipCode)) &&
        (this.timezoneStandardName == null ? geolocateResponse.timezoneStandardName == null : this.timezoneStandardName.equals(geolocateResponse.timezoneStandardName)) &&
        (this.latitude == null ? geolocateResponse.latitude == null : this.latitude.equals(geolocateResponse.latitude)) &&
        (this.longitude == null ? geolocateResponse.longitude == null : this.longitude.equals(geolocateResponse.longitude));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.countryCode == null ? 0: this.countryCode.hashCode());
    result = 31 * result + (this.countryName == null ? 0: this.countryName.hashCode());
    result = 31 * result + (this.city == null ? 0: this.city.hashCode());
    result = 31 * result + (this.regionCode == null ? 0: this.regionCode.hashCode());
    result = 31 * result + (this.regionName == null ? 0: this.regionName.hashCode());
    result = 31 * result + (this.zipCode == null ? 0: this.zipCode.hashCode());
    result = 31 * result + (this.timezoneStandardName == null ? 0: this.timezoneStandardName.hashCode());
    result = 31 * result + (this.latitude == null ? 0: this.latitude.hashCode());
    result = 31 * result + (this.longitude == null ? 0: this.longitude.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeolocateResponse {\n");
    
    sb.append("  countryCode: ").append(countryCode).append("\n");
    sb.append("  countryName: ").append(countryName).append("\n");
    sb.append("  city: ").append(city).append("\n");
    sb.append("  regionCode: ").append(regionCode).append("\n");
    sb.append("  regionName: ").append(regionName).append("\n");
    sb.append("  zipCode: ").append(zipCode).append("\n");
    sb.append("  timezoneStandardName: ").append(timezoneStandardName).append("\n");
    sb.append("  latitude: ").append(latitude).append("\n");
    sb.append("  longitude: ").append(longitude).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
