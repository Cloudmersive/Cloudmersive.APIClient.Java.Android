/**
 * imageapi
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cloudmersive.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Result of an NSFW classification
 **/
@ApiModel(description = "Result of an NSFW classification")
public class NsfwResult {
  
  @SerializedName("Successful")
  private Boolean successful = null;
  @SerializedName("Score")
  private Double score = null;
  @SerializedName("ClassificationOutcome")
  private String classificationOutcome = null;

  /**
   * True if the classification was successfully run, false otherwise
   **/
  @ApiModelProperty(value = "True if the classification was successfully run, false otherwise")
  public Boolean getSuccessful() {
    return successful;
  }
  public void setSuccessful(Boolean successful) {
    this.successful = successful;
  }

  /**
   * Score between 0.0 and 1.0.  Scores of 0.0-0.2 represent high probability safe content, while scores 0.8-1.0 represent high probability unsafe content.  Content between 0.2 and 0.8 is of increasing raciness.
   **/
  @ApiModelProperty(value = "Score between 0.0 and 1.0.  Scores of 0.0-0.2 represent high probability safe content, while scores 0.8-1.0 represent high probability unsafe content.  Content between 0.2 and 0.8 is of increasing raciness.")
  public Double getScore() {
    return score;
  }
  public void setScore(Double score) {
    this.score = score;
  }

  /**
   * Classification result into four categories: SafeContent_HighProbability, UnsafeContent_HighProbability, RacyContent, SafeContent_ModerateProbability
   **/
  @ApiModelProperty(value = "Classification result into four categories: SafeContent_HighProbability, UnsafeContent_HighProbability, RacyContent, SafeContent_ModerateProbability")
  public String getClassificationOutcome() {
    return classificationOutcome;
  }
  public void setClassificationOutcome(String classificationOutcome) {
    this.classificationOutcome = classificationOutcome;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsfwResult nsfwResult = (NsfwResult) o;
    return (this.successful == null ? nsfwResult.successful == null : this.successful.equals(nsfwResult.successful)) &&
        (this.score == null ? nsfwResult.score == null : this.score.equals(nsfwResult.score)) &&
        (this.classificationOutcome == null ? nsfwResult.classificationOutcome == null : this.classificationOutcome.equals(nsfwResult.classificationOutcome));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.successful == null ? 0: this.successful.hashCode());
    result = 31 * result + (this.score == null ? 0: this.score.hashCode());
    result = 31 * result + (this.classificationOutcome == null ? 0: this.classificationOutcome.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsfwResult {\n");
    
    sb.append("  successful: ").append(successful).append("\n");
    sb.append("  score: ").append(score).append("\n");
    sb.append("  classificationOutcome: ").append(classificationOutcome).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
