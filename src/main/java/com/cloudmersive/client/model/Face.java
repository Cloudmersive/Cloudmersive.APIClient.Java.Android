/**
 * imageapi
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cloudmersive.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Location of one face in an image
 **/
@ApiModel(description = "Location of one face in an image")
public class Face {
  
  @SerializedName("LeftX")
  private Integer leftX = null;
  @SerializedName("TopY")
  private Integer topY = null;
  @SerializedName("RightX")
  private Integer rightX = null;
  @SerializedName("BottomY")
  private Integer bottomY = null;

  /**
   * X coordinate of the left side of the face
   **/
  @ApiModelProperty(value = "X coordinate of the left side of the face")
  public Integer getLeftX() {
    return leftX;
  }
  public void setLeftX(Integer leftX) {
    this.leftX = leftX;
  }

  /**
   * Y coordinate of the top side of the face
   **/
  @ApiModelProperty(value = "Y coordinate of the top side of the face")
  public Integer getTopY() {
    return topY;
  }
  public void setTopY(Integer topY) {
    this.topY = topY;
  }

  /**
   * X coordinate of the right side of the face
   **/
  @ApiModelProperty(value = "X coordinate of the right side of the face")
  public Integer getRightX() {
    return rightX;
  }
  public void setRightX(Integer rightX) {
    this.rightX = rightX;
  }

  /**
   * Y coordinate of the bottom side of the face
   **/
  @ApiModelProperty(value = "Y coordinate of the bottom side of the face")
  public Integer getBottomY() {
    return bottomY;
  }
  public void setBottomY(Integer bottomY) {
    this.bottomY = bottomY;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Face face = (Face) o;
    return (this.leftX == null ? face.leftX == null : this.leftX.equals(face.leftX)) &&
        (this.topY == null ? face.topY == null : this.topY.equals(face.topY)) &&
        (this.rightX == null ? face.rightX == null : this.rightX.equals(face.rightX)) &&
        (this.bottomY == null ? face.bottomY == null : this.bottomY.equals(face.bottomY));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.leftX == null ? 0: this.leftX.hashCode());
    result = 31 * result + (this.topY == null ? 0: this.topY.hashCode());
    result = 31 * result + (this.rightX == null ? 0: this.rightX.hashCode());
    result = 31 * result + (this.bottomY == null ? 0: this.bottomY.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Face {\n");
    
    sb.append("  leftX: ").append(leftX).append("\n");
    sb.append("  topY: ").append(topY).append("\n");
    sb.append("  rightX: ").append(rightX).append("\n");
    sb.append("  bottomY: ").append(bottomY).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
