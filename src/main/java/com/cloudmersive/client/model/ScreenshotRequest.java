/**
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cloudmersive.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Details of the screenshot request
 **/
@ApiModel(description = "Details of the screenshot request")
public class ScreenshotRequest {
  
  @SerializedName("Url")
  private String url = null;
  @SerializedName("ExtraLoadingWait")
  private Integer extraLoadingWait = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getExtraLoadingWait() {
    return extraLoadingWait;
  }
  public void setExtraLoadingWait(Integer extraLoadingWait) {
    this.extraLoadingWait = extraLoadingWait;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenshotRequest screenshotRequest = (ScreenshotRequest) o;
    return (this.url == null ? screenshotRequest.url == null : this.url.equals(screenshotRequest.url)) &&
        (this.extraLoadingWait == null ? screenshotRequest.extraLoadingWait == null : this.extraLoadingWait.equals(screenshotRequest.extraLoadingWait));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.url == null ? 0: this.url.hashCode());
    result = 31 * result + (this.extraLoadingWait == null ? 0: this.extraLoadingWait.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenshotRequest {\n");
    
    sb.append("  url: ").append(url).append("\n");
    sb.append("  extraLoadingWait: ").append(extraLoadingWait).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
